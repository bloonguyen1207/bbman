<!doctype html>
<html>
    <head>
        <meta charset="UTF-8" />
        <title>Bomberman Project</title>
        <script src="//cdn.jsdelivr.net/phaser/2.6.2/phaser.min.js"></script>
    </head>
    <body>

    <script type="text/javascript">

        window.onload = function() {

        //  Note that this html file is set to pull down Phaser 2.5.0 from the JS Delivr CDN.
        //  Although it will work fine with this tutorial, it's almost certainly not the most current version.
        //  Be sure to replace it with an updated version before you start experimenting with adding your own code.

        var game = new Phaser.Game(1120, 640, Phaser.AUTO, '', { preload: preload, create: create, update: update, render: render});

        // Map tiles
        var irons;
        var shrubs;
        var bricks;
        var brick2;
        var mapText;
        var bg_map1 = "#5b3b0e";
        var bg_map4 = "#770528"
        var bg_map2 = "#A5F2F3";

        function preload () {

            game.load.spritesheet('dude', 'images/test.png', 32, 32);
            game.load.image('shrub', 'images/bush.gif');
            game.load.image('iron', 'images/steel.png');
            game.load.image('grassbg', 'images/grass.png');
            game.load.image('brick2', 'images/brick2.png');
            game.load.text('map4', 'maps/map4.txt');
            game.load.image('brick', 'images/ice.png');
            game.load.text('map1', 'maps/map2.txt');

        }

        function create () {
            game.stage.backgroundColor = bg_map4;
            // game.add.sprite(0, 0, 'grassbg');
            //  We're going to be using physics, so enable the Arcade Physics system
            game.physics.startSystem(Phaser.Physics.ARCADE);

            // Create iron iron
            irons = game.add.group();
            irons.enableBody = true;

            var iron;

            // Create Shrubs
            shrubs = game.add.group();
            shrubs.enableBody = true;

            var shrub;

            // Create Bricks
            brick2 = game.add.group();
            brick2.enableBody = true;

            var brick;

            // Load mapfile
            var mapFile = game.cache.getText('map2');
            mapText = mapFile.split('\n');
            for (i = 0; i < 20; i++) {
                for (var j = 0; j < 35; j++) {
                    if (mapText[i][j] == 1) {
                        iron = irons.create(j * 32, i * 32, 'iron');
                        iron.body.immovable = true;
                        iron.scale.setTo(0.32, 0.32);
                    } else if (mapText[i][j] == 2) {
                        brick = brick2.create(j * 32, i * 32, 'brick2');
                        brick.body.immovable = true;
                        brick.scale.setTo(0.5, 0.5);
                    } else if (mapText[i][j] == 3) {
                        shrub = shrubs.create(j * 32, i * 32, 'shrub');
                        shrub.body.immovable = true;
                        shrub.body.setCircle(16);
                    } else if (mapText[i][j] == 'x') {
                        // The player and its settings
                        player = game.add.sprite(j * 32, i * 32, 'dude');
                        //  We need to enable physics on the player
                        game.physics.arcade.enable(player);
                        player.body.setCircle(16);
                    }
                }

            }
            
            player.body.collideWorldBounds = true;

            //  Our two animations, walking left and right.
            player.animations.add('down', [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], 10, true);
            player.animations.add('left', [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], 10, true);
            player.animations.add('right', [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], 10, true);
            player.animations.add('up', [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], 10, true);
            
            // scoreText = game.add.text(16, 16, 'score: 0', { fontSize: '32px', fill: '#000' });

        }

        function update () {

            //  Collide the player with the obstacles
            game.physics.arcade.collide(player, irons);
            game.physics.arcade.collide(player, shrubs);
            game.physics.arcade.collide(player, brick2);

            cursors = game.input.keyboard.createCursorKeys();

            //  Reset the players velocity (movement)
            player.body.velocity.x = 0;
            player.body.velocity.y = 0;

            if (cursors.left.isDown)
            {
                //  Move to the left
                player.body.velocity.x = -150;

                player.animations.play('left');
            }
            else if (cursors.right.isDown)
            {
                //  Move to the right
                player.body.velocity.x = 150;

                player.animations.play('right');
            } 
            else if (cursors.up.isDown){

                player.body.velocity.y = -150;
                player.animations.play('up');
            } 
            else if (cursors.down.isDown){
                
                player.body.velocity.y = 150;

                player.animations.play('down');
            }
            else
            {
                //  Stand still
                player.animations.stop();

                player.frame = 4;
            }

        }

        function collectStar (player, star) {

            // Removes the star from the screen
            // star.kill();

            //  Add and update the score
            // score += 10;
            // scoreText.text = 'Score: ' + score;
        }


        function render () {
            game.debug.body(player);
            // shrubs.forEachAlive(renderGroup, this);
            // function renderGroup(member) { 
            //     game.debug.body(member);
            // }
            // game.debug.body(shrub);
        }


    };

    </script>

    </body>
</html>